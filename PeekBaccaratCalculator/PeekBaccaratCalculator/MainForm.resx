<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAABkAAABDAAAAZwAA
        AHsAAAB/AAAAfwAAAH8AAAB/AAAAfwAAAH8AAAB7AAAAZwAAAEMAAAAaAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAADAAAACPAAAA2AAA
        APkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+QAAANgAAACPAAAAMQAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAB5AAAA5gAA
        AP8AAADyAAAAxAAAAJgAAACAAAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAgAAAAJcAAADEAAAA8gAA
        AP8AAADmAAAAeQAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXAAAAowAA
        APwAAADyAAAAmwAAAEYAAABAAAAAYAAAAHcAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB3AAAAYAAA
        AEAAAABGAAAAmwAAAPIAAAD8AAAAowAAABcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAA
        AKMAAAD/AAAA2wAAAFYAAABIAAAArAAAAOsAAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA7wAAALAAAABIAAAAVgAAANsAAAD/AAAAowAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAB6AAAA/gAAANsAAABEAAAAdgAAAO8AAAD/AAAA/wAAAP8AAAD/AAAA/AAAAK4AAAB7AAAAewAA
        AK4AAAD5AAAArgAAAHsAAAB8AAAAsQAAAOoAAAB0AAAAQwAAANsAAAD+AAAAeQAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAMQAAAOUAAADzAAAAVQAAAHYAAAC8AAAAsQAAAP8AAAD/AAAA/wAAAP8AAADkAAAANQAA
        AGwAAABsAAAANwAAAMkAAAA3AAAAbAAAAGwAAAA1AAAA5QAAAPkAAAB0AAAAVQAAAPMAAADlAAAAMQAA
        AAAAAAAAAAAAAAAAAAAAAACPAAAA/wAAAJsAAABLAAAAxgAAADwAAACdAAAArwAAAHsAAAB7AAAAsAAA
        ANsAAAA+AAAA4AAAAOAAAABAAAAAvgAAAD8AAADgAAAA4AAAAD4AAADeAAAA/wAAAOwAAABJAAAAmwAA
        AP8AAACPAAAAAAAAAAAAAAAAAAAAGgAAANcAAADzAAAARwAAAKkAAABqAAAAdgAAAOEAAAA1AAAAbQAA
        AG8AAAA4AAAAwwAAAD8AAADgAAAA4AAAAEAAAAC+AAAAPwAAAOAAAADgAAAAPgAAAN4AAAD/AAAA/wAA
        AKwAAABHAAAA8wAAANcAAAAaAAAAAAAAAAAAAABDAAAA+QAAAMQAAABDAAAAvgAAADwAAADbAAAA4AAA
        AD4AAADJAAAAiAAAACkAAAC2AAAAOAAAAGwAAABsAAAANwAAAMkAAAA3AAAAbAAAAGwAAAA1AAAA5AAA
        AP8AAAD/AAAA6gAAAEEAAADEAAAA+QAAAEMAAAAAAAAAAAAAAGcAAAD/AAAAmAAAAGQAAACdAAAAWAAA
        AP4AAADfAAAANgAAAEAAAABSAAAAUQAAAF8AAACpAAAAfwAAAH4AAACxAAAA+QAAALEAAAB+AAAAfAAA
        AK0AAAD8AAAA/wAAAP8AAAD+AAAAYAAAAJgAAAD/AAAAZwAAAAAAAAAAAAAAegAAAP8AAACBAAAAeQAA
        AMkAAAC4AAAA/wAAAOUAAAAnAAAAGwAAANwAAADbAAAALQAAAHEAAACBAAAAgAAAAIIAAAB9AAAAfgAA
        AJIAAADwAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAB3AAAAgQAAAP8AAAB6AAAAAAAAAAAAAAB/AAAA/wAA
        AHwAAAB+AAAAwQAAAL0AAAD/AAAA/QAAAJ0AAAAeAAAAbQAAAG0AAAAeAAAAbAAAAH4AAABsAAAAHgAA
        AG0AAABsAAAALgAAAN8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAHwAAAB8AAAA/wAAAH8AAAAAAAAAAAAA
        AH8AAAD/AAAAfAAAAH4AAADBAAAAvgAAAP8AAAD/AAAA3wAAAC4AAABsAAAAbAAAAC4AAADfAAAA/wAA
        AN4AAAA9AAAA4AAAAOAAAAA9AAAA3gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAfAAAAHwAAAD/AAAAfwAA
        AAAAAAAAAAAAQAAAAIQAAAA+AAAAPgAAAIMAAACCAAAAgAAAAIEAAABvAAAALgAAAOEAAADhAAAALgAA
        AGsAAAB+AAAAbAAAAB4AAABwAAAAbgAAAB4AAABwAAAAgQAAAIAAAACAAAAAgAAAAIIAAAA+AAAAPgAA
        AIQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAAA4gAA
        AOEAAAAuAAAAawAAAH0AAAB9AAAAbgAAAB4AAABtAAAAcAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AB8AAADiAAAA4AAAAD0AAADeAAAA/wAAAP8AAADeAAAAPQAAAOAAAADiAAAAHwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAHwAAAOIAAADkAAAAVQAAAOIAAAD/AAAA/wAAAOIAAABVAAAA5AAAAOIAAAAfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAWAAAA0wAAAP4AAADnAAAA+wAAAP8AAAD/AAAA+wAAAOcAAAD9AAAA2gAA
        ABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAB2AAAA9wAAAP8AAADpAAAAlAAAAJQAAADpAAAA/wAA
        AP8AAACZAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAABcAAAAsQAAAGEAAABNAAAATQAA
        AGIAAAC9AAAAfwAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAFAAA
        ALsAAAC7AAAAFQAAAAgAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAFAAAAMgAAADIAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAFcAAADOAAAAzgAAAFcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAUAAAAzgAAAP8AAAD/AAAAzgAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAACQAAADgAAAA/wAAAP8AAADgAAAAJAAAAAcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABSAAAAPgAAAGcAAAB9AAAAfQAAAGcAAAA+AAAAUgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG4AAADFAAAAfwAAAHwAAAB8AAAAfwAA
        AMUAAABtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAM0AAAD/AAAA/wAA
        AP8AAAD/AAAAzQAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwAA
        AGwAAAB/AAAAfwAAAGwAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////8AAP/8AAA/+AAAH/AAAA/gAAAHwAAAA8AAAAPAAAADgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAf/AA///wAP//8AD///AA///wAP//+AH///4D////D////w////4
        H///8A////AP///wD///8A////gf//////8=
</value>
  </data>
</root>